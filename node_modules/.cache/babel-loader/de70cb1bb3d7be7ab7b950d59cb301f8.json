{"ast":null,"code":"import Piece from './Piece.js';\nexport default class Rook extends Piece {\n  constructor(player) {\n    super(player, player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\");\n  }\n\n  isMovePossible(src, dest) {\n    let mod = src % 8;\n    let diff = 8 - mod;\n    return Math.abs(src - dest) % 8 === 0 || dest >= src - mod && dest < src + diff;\n  }\n  /**\n   * get path between src and dest (src and dest exclusive)\n   * @param  {num} src  \n   * @param  {num} dest \n   * @return {[array]}      \n   */\n\n\n  getSrcToDestPath(src, dest) {\n    let path = [],\n        pathStart,\n        pathEnd,\n        incrementBy;\n\n    if (src > dest) {\n      pathStart = dest;\n      pathEnd = src;\n    } else {\n      pathStart = src;\n      pathEnd = dest;\n    }\n\n    if (Math.abs(src - dest) % 8 === 0) {\n      incrementBy = 8;\n      pathStart += 8;\n    } else {\n      incrementBy = 1;\n      pathStart += 1;\n    }\n\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\n      path.push(i);\n    }\n\n    return path;\n  }\n\n}","map":{"version":3,"sources":["/Users/shableharris/Desktop/chess-game/src/pieces/rook.js"],"names":["Piece","Rook","constructor","player","isMovePossible","src","dest","mod","diff","Math","abs","getSrcToDestPath","path","pathStart","pathEnd","incrementBy","i","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAnB,CAAyB;AACtCE,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN,EAAeA,MAAM,KAAK,CAAX,GAAc,qEAAd,GAAsF,qEAArG;AACD;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAMC,IAAN,EAAW;AACvB,QAAIC,GAAG,GAAGF,GAAG,GAAG,CAAhB;AACA,QAAIG,IAAI,GAAG,IAAID,GAAf;AACA,WAAQE,IAAI,CAACC,GAAL,CAASL,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAA7B,IAAmCA,IAAI,IAAKD,GAAG,GAAGE,GAAf,IAAuBD,IAAI,GAAID,GAAG,GAAGG,IAAhF;AACD;AAED;;;;;;;;AAMAG,EAAAA,gBAAgB,CAACN,GAAD,EAAMC,IAAN,EAAW;AACzB,QAAIM,IAAI,GAAG,EAAX;AAAA,QAAeC,SAAf;AAAA,QAA0BC,OAA1B;AAAA,QAAmCC,WAAnC;;AACA,QAAGV,GAAG,GAAGC,IAAT,EAAc;AACZO,MAAAA,SAAS,GAAGP,IAAZ;AACAQ,MAAAA,OAAO,GAAGT,GAAV;AACD,KAHD,MAII;AACFQ,MAAAA,SAAS,GAAGR,GAAZ;AACAS,MAAAA,OAAO,GAAGR,IAAV;AACD;;AACD,QAAGG,IAAI,CAACC,GAAL,CAASL,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAAhC,EAAkC;AAChCS,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACD,KAHD,MAII;AACFE,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACD;;AAED,SAAI,IAAIG,CAAC,GAAGH,SAAZ,EAAuBG,CAAC,GAAGF,OAA3B,EAAoCE,CAAC,IAAED,WAAvC,EAAmD;AACjDH,MAAAA,IAAI,CAACK,IAAL,CAAUD,CAAV;AACD;;AACD,WAAOJ,IAAP;AACD;;AAxCqC","sourcesContent":["import Piece from './Piece.js';\n\nexport default class Rook extends Piece {\n  constructor(player){\n    super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\n  }\n\n  isMovePossible(src, dest){\n    let mod = src % 8;\n    let diff = 8 - mod;\n    return (Math.abs(src - dest) % 8 === 0 || (dest >= (src - mod) && dest < (src + diff)));\n  }\n\n  /**\n   * get path between src and dest (src and dest exclusive)\n   * @param  {num} src  \n   * @param  {num} dest \n   * @return {[array]}      \n   */\n  getSrcToDestPath(src, dest){\n    let path = [], pathStart, pathEnd, incrementBy;\n    if(src > dest){\n      pathStart = dest;\n      pathEnd = src;\n    }\n    else{\n      pathStart = src;\n      pathEnd = dest;\n    }\n    if(Math.abs(src - dest) % 8 === 0){\n      incrementBy = 8;\n      pathStart += 8;\n    }\n    else{\n      incrementBy = 1;\n      pathStart += 1;\n    }\n\n    for(let i = pathStart; i < pathEnd; i+=incrementBy){\n      path.push(i);\n    }\n    return path;\n  }\n}"]},"metadata":{},"sourceType":"module"}